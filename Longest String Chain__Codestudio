//note---- similar to LIS one comparison only we have to do for string 


bool comp(string &s1,string &s2)
{
    return s1.size()<s2.size();
}

bool compare(string s1,string s2)
{
    if(s1.size()!=s2.size()+1) return false;

    int first=0,second=0;

    while(first<s1.size())
    {
        if(s1[first]==s2[second])
        {
            first++;second++;
        }
        else{
            first++;
        }
    }

    if(first==s1.size() && second==s2.size()) return true;
    return false;
}

int longestStrChain(vector<string> &arr){
    // Write your code here.
    sort(arr.begin(),arr.end(),comp);
    int ans=1;

    vector<int> dp(arr.size(),1);


    for(int i=0;i<arr.size();i++)
    {
        for(int prev=0;prev<i;prev++)
        {
            if(compare(arr[i],arr[prev]) && dp[i]<1+dp[prev])
            {
                dp[i]=1+dp[prev];
            }
        }

        ans=max(ans,dp[i]);
    }

    return ans;
}

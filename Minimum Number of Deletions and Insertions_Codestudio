#include <bits/stdc++.h> 
int lcs(string &str, string &ptr,int m,int n,vector<vector<int>> &dp)
{
    int ans=0;
    for(int i=1;i<=m;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(str[i-1]==ptr[j-1])
            {
                dp[i][j]=1+dp[i-1][j-1];
                ans=max(ans,dp[i][j]);
            }
            else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        }
    }

    return ans;
}
int canYouMake(string &str, string &ptr)
{
    int m=str.length();
    int n=ptr.length();
    vector<vector<int>> dp(m+1,vector<int>(n+1,0));
    return m+n-2*lcs(str,ptr,m,n,dp);
}

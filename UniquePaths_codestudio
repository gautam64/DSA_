#include <bits/stdc++.h> 
int solve(int col, int row,int m,int n,vector<vector<int>> &dp)
{
	if(row==m-1 && col==n-1) return 1;

	if(dp[row][col]!=-1) return dp[row][col];

	//right

	int right=0;
	int down=0;

	if(col+1<n)
	{
		right=solve(col+1,row,m,n,dp);
	}

	if(row+1<m)
	{
		down=solve(col,row+1,m,n,dp);
	}

	return dp[row][col]=down+right;
}
int uniquePaths(int m, int n) {
	// Write your code here.

	vector<vector<int>> dp(m,vector<int>(n,-1));

	//return solve(0,0,m,n,dp);

	dp[m-1][n-1]=1;

	for(int i=m-1;i>=0;i--)
	{
		for(int j=n-1;j>=0;j--)
		{

			if(i==m-1 && j==n-1) continue;
			int right=0;
			int down=0;

		if(j+1<n)
		{
			right=dp[i][j+1];
		}

		if(i+1<m)
		{
		down=dp[i+1][j];
		}

		dp[i][j]=down+right;
		}
	}

	return dp[0][0];
}

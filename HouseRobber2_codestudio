#include <bits/stdc++.h> 

long long int solve2(vector<int>& nums)
{
    int n=nums.size();
    long long int pick=INT_MIN;
    long long int notpick;
    long long int prev1=nums[0];
    long long int prev2=0;

    for(int i=1;i<n;i++)
    {   
        
        {
             pick=nums[i]+prev2;
        }

        
        notpick=prev1;

        long long int ans=max(pick,notpick);
        prev2=prev1;
        prev1=ans;

        
    }

    return prev1;
}
long long int houseRobber(vector<int>& valueInHouse)
{
    // Write your code here.
    int n=valueInHouse.size();
    vector<int> dp1(n-1,-1);
    vector<int> dp2(n-1,-1);

    if(n==1) return valueInHouse[0];

    vector<int> temp1,temp2;

    for(int i=0;i<n;i++)
    {
        if(i!=0) 
        {
            temp1.push_back(valueInHouse[i]);
        }

        if(i!=n-1) 
        {
            temp2.push_back(valueInHouse[i]);
        }
    }

    


    return max(solve2(temp1),solve2(temp2));
}

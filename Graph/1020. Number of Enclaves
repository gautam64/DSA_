class Solution {
public:
    void dfs(int x,int y,vector<vector<int>>& vis,vector<vector<int>>& grid,int &ans)
    {
        vis[x][y]=1;
        ans++;

        int n=grid.size();
        int m=grid[0].size();

        int delrow[]={-1,0,1,0};
        int delcol[]={0,-1,0,1};
        for(int i=0;i<4;i++)
        {
            int nrow=x+delrow[i];
            int ncol=y+delcol[i];
            if(nrow>=0 && ncol>=0 && nrow<n && ncol<m && vis[nrow][ncol]==0 && grid[nrow][ncol]==1)
            {
                dfs(nrow,ncol,vis,grid,ans);
            }
        }
    }
    int numEnclaves(vector<vector<int>>& grid) {

        int n=grid.size();
        int m=grid[0].size();

        int ans=0;

        vector<vector<int>> vis(n,vector<int>(m,0));

        for(int i=0;i<n;i++)
        {
            if(grid[i][0]==1 && vis[i][0]==0)
            {
                dfs(i,0,vis,grid,ans);
            }

            if(grid[i][m-1]==1 && vis[i][m-1]==0)
            {
                dfs(i,m-1,vis,grid,ans);
            }
        }

        for(int i=0;i<m;i++)
        {
            if(grid[0][i]==1 && vis[0][i]==0)
            {
                dfs(0,i,vis,grid,ans);
            }

            if(grid[n-1][i]==1 && vis[n-1][i]==0)
            {
                dfs(n-1,i,vis,grid,ans);
            }
        }

        ans=0;

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1 && vis[i][j]==0)
                {
                    dfs(i,j,vis,grid,ans);
                }
            }
        }

        return ans;
        
    }
};

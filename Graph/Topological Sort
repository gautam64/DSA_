#include <bits/stdc++.h> 
        void dfs(int node,vector<int> adj[],int vis[],stack<int> &st)
        {
            vis[node]=1;
            
            for(auto it : adj[node])
            {
                if(!vis[it])
                {
                    dfs(it,adj,vis,st);
                }
            }
            
            st.push(node);
        }


vector<int> topologicalSort(vector<vector<int>> &edges, int V, int e)  {

    // Write your code here

    vector<int> adj[V];

    for(int i=0;i<edges.size();i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
    }

	    int vis[V]={0};
	    stack<int> st;
	    vector<int> ans;
	    
	    for(int i=0;i<V;i++)
	    {
	        if(!vis[i])
	        {
	            dfs(i,adj,vis,st);
	        }
	    }
	    
	    while(!st.empty())
	    {
	        ans.push_back(st.top());
	        st.pop();
	    }
	    
	    return ans;
}

class Solution {
public:
    void dfs(int x,int y,vector<vector<int>>& vis,vector<vector<char>>& board)
    {
        vis[x][y]=1;
        int delrow[]={-1,0,1,0};
        int delcol[]={0,-1,0,1};

        for(int i=0;i<4;i++)
        {
            int nrow=x+delrow[i];
            int ncol=y+delcol[i];

            if(nrow>=0 && ncol>=0 && nrow<board.size() && ncol<board[0].size())
            {
                if(vis[nrow][ncol]==0 && board[nrow][ncol]=='O')
                {
                    dfs(nrow,ncol,vis,board);
                }
            }
        }
    }
    void solve(vector<vector<char>>& board) {

        int m=board.size();  //no of rows
        int n=board[0].size(); //

        vector<vector<int>> vis(m,vector<int>(n,0));

        for(int i=0;i<m;i++)
        {
            if(board[i][0]=='O' && vis[i][0]==0)
            {
                dfs(i,0,vis,board);
            }

            if(board[i][n-1]=='O' && vis[i][n-1]==0)
            {
                dfs(i,n-1,vis,board);
            }
        }

        for(int i=0;i<n;i++)
        {
            if(board[0][i]=='O' && vis[0][i]==0)
            {
                dfs(0,i,vis,board);
            }

            if(board[m-1][i]=='O' && vis[m-1][i]==0)
            {
                dfs(m-1,i,vis,board);
            }
        }

        for(int i=0 ;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(vis[i][j]==0 && board[i][j]=='O')
                {
                    board[i][j]='X';
                    vis[i][j]=1;
                }
            }
        }
        
    }
};

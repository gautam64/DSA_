vector < vector < int > > nearest(vector < vector < int >> & mat, int n, int m) {
    // Write your code here.


	vector < vector < int > > dis(n,vector<int>(m,0));
	vector < vector < int > > vis(n,vector<int>(m,0));
	queue<pair<pair<int,int>,int>> q;

	

	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(mat[i][j]==1)
			{
				q.push({{i,j},0});
				vis[i][j]=1;
			}
		}
	}

	int delrow[]={-1,0,1,0};
	int delcol[]={0,1,0,-1};

	while(!q.empty())
	{
		int x=q.front().first.first;
		int y=q.front().first.second;
		int steps=q.front().second;
		q.pop();
		dis[x][y]=steps;

		for(int i=0;i<4;i++)
		{
			int nrow=x+delrow[i];
			int ncol=y+delcol[i];

			if(nrow>=0 && ncol>=0 && nrow<n && ncol<m && vis[nrow][ncol]==0)
			{
				vis[nrow][ncol]=1;
				q.push({{nrow,ncol},steps+1});

			}

			
		}
	}

	return dis;

	
}

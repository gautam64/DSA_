//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
  public:
    // Function to find minimum time required to rot all oranges.


    int orangesRotting(vector<vector<int>>& mat) {
        // Code here
        
        int m=mat.size();
        int n=mat[0].size();
        
        vector<vector<int>> vis(m,vector<int>(n,0));
        queue<pair<pair<int,int>,int>> q;
        
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(mat[i][j]==2)
                {
                   q.push({{i,j},0}); 
                   vis[i][j]=2;
                }
            }
        }
        int t=0;
        
        while(!q.empty())
        {
            auto it=q.front();
            int row=it.first.first;
            int col=it.first.second;
            int time=it.second;
            t=max(t,time);
            q.pop();
            int delrow[]={-1,0,+1,0};
            int delcol[]={0,-1,0,+1};
            
            for(int i=0;i<4;i++)
            {
                int nrow=row+delrow[i];
                int ncol=col+delcol[i];
                
                if(nrow>=0 && ncol>=0 && nrow<m && ncol<n && 
                mat[nrow][ncol]==1 && vis[nrow][ncol]!=2)
                {
                    q.push({{nrow,ncol},time+1}); 
                    vis[nrow][ncol]=2;
                }
            }
        }
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(vis[i][j]!=2 && mat[i][j]==1)
                {
                   return -1;
                }
            }
        }
        
        return t;
        
        
    }
};


//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int n, m;
        cin >> n >> m;
        vector<vector<int>> mat(n, vector<int>(m, -1));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                cin >> mat[i][j];
            }
        }
        Solution obj;
        int ans = obj.orangesRotting(mat);
        cout << ans << "\n";

        cout << "~"
             << "\n";
    }
    return 0;
}
// } Driver Code Ends

#include <bits/stdc++.h> 
int solve(int ind,int wt,vector<int> &weight, vector<int> &value,vector<vector<int>> &dp)
{

	if(wt==0) return 0;

	if(ind==0)
	{
		if(weight[0]<=wt) return value[0];
		else return 0;
	}

	if(dp[ind][wt]!=-1) return dp[ind][wt];

	int notpick=solve(ind-1,wt,weight,value,dp);
	int pick=INT_MIN;
	if(wt>=weight[ind]) pick=value[ind]+solve(ind-1,wt-weight[ind],weight,value,dp);

	return dp[ind][wt]=max(pick , notpick);
}
int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
	// Write your code here

	vector<vector<int>> dp(n,vector<int>(maxWeight+1,-1));
	return solve(n-1,maxWeight,weight,value,dp);
}

bool solve(int i,int j,string pattern, string text)
{

   if(i<0 && j<0) return true;

   if(i<0 && j>=0) return false; 

   if(i>0 && j<0)
   {
      while(i>=0)
      {
         if(pattern[i]!='*') return false;
         i--;
      }
      return true;
   }


   if(pattern[i]==text[j]) return solve(i-1,j-1,pattern,text);
   
   if(pattern[i]=='?') return solve(i-1,j-1,pattern,text);
   if(pattern[i]=='*') return (solve(i-1,j,pattern,text) || solve(i,j-1,pattern,text));

   if(pattern[i]!=text[j] && pattern[i]!='?' && pattern[i]!='*') return false;
}

bool wildcardMatching(string pattern, string text)
{
   // Write your code here.

   int n=pattern.size();
   int m=text.size();

   vector<vector<int>> dp(n,vector<int>(m,-1));

   return solve(n-1,m-1,pattern,text);
}

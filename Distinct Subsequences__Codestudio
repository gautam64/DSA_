#define mod 1000000007
int solve(int i,int j,string &str, string &sub,vector<vector<int>> &dp)
{

	if(j<0) return 1;
	if(i<0 && j>=0) return 0;

	if(dp[i][j]!=-1) return dp[i][j];

	if(str[i]==sub[j]) 
	{
		return dp[i][j]=(solve(i-1,j-1,str,sub,dp)%mod+solve(i-1,j,str,sub,dp)%mod);
	}
	else return dp[i][j]=(solve(i-1,j,str,sub,dp)%mod);
}
int distinctSubsequences(string &str, string &sub)
{
	// Write your code here.
	int n=str.length();
	int m=sub.length();

	vector<vector<int>> dp(n,vector<int>(m,-1));

	return solve(n-1,m-1,str,sub,dp)%mod;
}

#include<bits/stdc++.h>

vector<int> divisibleSet(vector<int> &arr)
{
    // Write your code here.

    sort(arr.begin(),arr.end());
    vector<int> dp(arr.size(),1),ans,hash(arr.size());
    int maxi=1;
    int lastindex=0;

    for(int i=0;i<arr.size();i++)
    {
        hash[i]=i;
        for(int ind=0;ind<i;ind++)
        {
            if(arr[i]%arr[ind]==0 && dp[i]<1+dp[ind])
            {
                dp[i]=1+dp[ind];
                hash[i]=ind;
                
            }
        }

        if(dp[i]>maxi)
        {
            maxi=dp[i];
            lastindex=i;
        }


    }

    ans.push_back(arr[lastindex]);

    while(hash[lastindex]!=lastindex)
    {
        lastindex=hash[lastindex];
        ans.push_back(arr[lastindex]);
    }

    return ans;

    
}
